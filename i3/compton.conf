// Compton's config
# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";

#################################
#
# GLX backend
#
#################################

glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
# but a 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown.
# Useful with --glx-swap-method, as well.
glx-copy-from-front = false;

# GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
# My tests on nouveau shows a 200% performance boost when only 1/4 of the screen is updated.
# May break VSync and is not available on some drivers.
# Overrides --glx-copy-from-front.
# glx-use-copysubbuffermesa = true;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.
# glx-no-rebind-pixmap = true;


# GLX backend: GLX buffer swap method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# undefined is the slowest and the safest, and the default value.
# copy is fastest, but may fail on some drivers,
# 2-6 are gradually slower but safer (6 is still faster than 0).
# Usually, double buffer means 2, triple buffer means 3.
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
glx-swap-method = "undefined";


vsync = "opengl-swc";

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;

# Config wireframe stolen from here: https://github.com/nim-/dotfiles/blob/master/.config/compton.conf
# Shadow
shadow = true;                  # Enabled client-side shadows on windows.
no-dock-shadow = false;         # Avoid drawing shadows on dock/panel windows.
no-dnd-shadow = true;           # Don't draw shadows on DND windows.
clear-shadow = true;            # Zero the part of the shadow's mask behind the window (experimental).
shadow-radius = 12;             # The blur radius for shadows. (default 12)
shadow-offset-x = -15;          # The left offset for shadows. (default -15)
shadow-offset-y = -15;          # The top offset for shadows. (default -15)
#shadow-red = 0.0;              # Red color value of shadow. (0.0 - 1.0, defaults to 0)
#shadow-green = 0.0;            # Green color value of shadow. (0.0 - 1.0, defaults to 0)
#shadow-blue = 0.0;             # Blue color value of shadow. (0.0 - 1.0, defaults to 0)
# Exclude conditions for shadows.
# Fix dual shadow on some gtk3 powered applications: "_GTK_FRAME_EXTENTS@:c"
shadow-exclude = [
               "n:e:Notification",
               "class_g = 'Gnome-screenshot'",
               "class_g = 'Gnome-control-center'",
               "class_g = 'Nautilus'"
               ];
               #"_GTK_FRAME_EXTENTS@:c"
shadow-ignore-shaped = false;   # Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
# Opacity
shadow-opacity = 0.7;                   # The translucency for shadows. (default .75)
active-opacity = 1.0;
menu-opacity = 1.0;                     # The opacity for menus. (default 1.0)
#frame-opacity = 0.8;                   # Opacity of window titlebars and borders. (0.1 - 1.0)
#inactive-opacity = 0.9;                # Opacity of inactive windows. (0.1 - 1.0)
#inactive-opacity-override = true;      # Inactive opacity set by 'inactive-opacity' overrides value of _NET_WM_OPACITY.
#alpha-step = 0.06;             # XRender backend: Step size for alpha pictures. Increasing it may result in less X resource usage, yYet fading may look bad.
# inactive-dim = 0.2;                   # Dim inactive windows. (0.0 - 1.0)
# inactive-dim-fixed = true;            # Do not let dimness adjust based on window opacity.
# blur-background = true;               # Blur background of transparent windows. Bad performance with X Render backend. GLX backend is preferred.
# blur-background-frame = true;         # Blur background of opaque windows with transparent frames as well.
#blur-background-fixed = false;         # Do not let blur radius adjust based on window opacity.
blur-background-exclude = [ "window_type = 'dock'", "window_type = 'desktop'" ]; # Exclude conditions for background blur.
# Fading
fading = true;                  # Fade windows during opacity changes.
fade-delta = 12;                # The time between steps in a fade in milliseconds. (default 10).
fade-in-step = 0.15;            # Opacity change between steps while fading in. (default 0.028).
fade-out-step = 0.15;           # Opacity change between steps while fading out. (default 0.03).
no-fading-openclose = false;    # Fade windows in/out when opening/closing.
# Other
#inactive-dim = 0.5;            # Dim inactive windows. (0.0 - 1.0, defaults to 0).
mark-wmwin-focused = true;      # Try to detect WM windows and mark them as active.
mark-ovredir-focused = true;
detect-rounded-corners = true;
# Window type settings
wintypes:
{
  tooltip = { fade = true; shadow = false; opacity = 0.75; };
};
